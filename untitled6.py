# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xYcyS_Yeq3jBF6wpdvKSyZ9DRQLnsEM9
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.utils import to_categorical
from sklearn.preprocessing import LabelEncoder
from tensorflow.keras.utils import plot_model

# Загрузка и подготовка данных
# Предполагается, что данные находятся в файле spam_dataset.csv
data = pd.read_csv('spam.csv', delimiter=',', header = None,  encoding='ISO-8859-1', skiprows= 1) #3

# Разделение данных на признаки (X) и целевую переменную (y)
x = data[1]
y = data[0] #3

# Токенизация текста
tokenizer = Tokenizer(num_words=10000, oov_token="<OOV>")
tokenizer.fit_on_texts(x)
sequences = tokenizer.texts_to_sequences(x)
padded_sequences = pad_sequences(sequences, padding='post') #5

# Преобразование меток в числа
label_encoder = LabelEncoder()
y = label_encoder.fit_transform(y) #3

# Преобразование меток в категориальные данные
y = to_categorical(y, num_classes=2) #2

model = Sequential([
    Embedding(100000, 31, input_length=padded_sequences.shape[1]),
    LSTM(31),
    Dense(31, activation='relu'),
    Dense(64, activation='relu'),
    Dense(2, activation='softmax')
]) #7



# Компиляция модели
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) #2

# Обучение модели
model.fit(padded_sequences, y, epochs=5, validation_split=0.15) #2

# Функция для классификации нового сообщения
def classify_message(message):
    sequence = tokenizer.texts_to_sequences([message])
    padded = pad_sequences(sequence, padding='post')
    prediction = model.predict(padded)
    result = "спам" if prediction[0][0] > prediction[0][1] else "не спам"
    return result #7

tf.keras.utils.plot_model(model, to_file='model.png', show_shapes=True, show_layer_names=True)

# Пример использования функции классификации
while True:
    new_message = input("письмо на проверку - ")
    print(f"{new_message} - {classify_message(new_message)}") #4 (sum str) 48